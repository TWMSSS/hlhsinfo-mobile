name: "Release Build"

on:
  push:
    branches:
      - master
    paths:
      - android/app/build.gradle
    tags:
      - "v*"
  pull_request:
    branches: [master]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        
      - name : Retrieve Version
        run: |
          echo "::set-output name=VERSION_NAME::$(grep -o "versionName\s\+.*" app/build.gradle | awk '{ print $2 }' | tr -d \"\')"
        id: android_version

      - name: Get version
        run: |
          echo "version_name=${{steps.android_version.outputs.VERSION_NAME}}" >> $GITHUB_ENV

      - name: Setting up the keystore
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" > signing.keystore.asc
          echo "${{ secrets.RELEASE_KEYSTORE_PROPERTIES }}" > keystore.properties.asc
          gpg --batch --passphrase "${{ secrets.RELEASE_KEYSTORE_PASSPHRASE }}" -d signing.keystore.asc > signing.keystore
          gpg --batch --passphrase "${{ secrets.RELEASE_KEYSTORE_PASSPHRASE }}" -d keystore.properties.asc > keystore.properties
          mv signing.keystore android/app/signing.keystore
          mv keystore.properties android/keystore.properties

      - name: Set up JDK 12
        uses: actions/setup-java@v1
        with:
          java-version: '12.x'
          
      - name: Install all dependencies
        run: yarn
        
      - name: Build Android application
        run: |
          cd android
          chmod +x ./gradlew
          ./gradlew bundleRelease

      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.version_name }}
          release_name: ${{ env.version_name }}
          body: |
            # Changelog
            Release type: ${{ env.version_name }}
          prerelease: false

      - name: Upload Bundle Asset
        if: steps.create_release.outputs.upload_url && steps.prepare_release.outputs.bundle_path && steps.prepare_release.outputs.bundle_name
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: android/app/build/outputs/bundle/release/app-release.aab
          asset_name: release.aab
          asset_content_type: application/octet-stream