name: "Release Build"

on:
  push:
    tags:
      - "v*"
    paths:
      - "android/app/build.gradle"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name : Retrieve Version
        run: |
          echo "::set-output name=VERSION_NAME::$(grep "versionName" app/build.gradle | awk '{print $2}' | tr -d \\"""\')"
          echo "::set-output name=VERSION_CODE::$(grep "versionCode [0-9]" app/build.gradle | awk '{ print $2 }')"
        id: android_version

      - name: Setting up the build environment
        run: |
          echo "version_name=${{steps.android_version.outputs.VERSION_NAME}}" >> $GITHUB_ENV
          echo "version_code=${{steps.android_version.outputs.VERSION_CODE}}" >> $GITHUB_ENV

      - name: Setting up the keystore
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" > signing.keystore.asc
          echo "${{ secrets.RELEASE_KEYSTORE_PROPERTIES }}" > keystore.properties.asc
          gpg --batch --passphrase "${{ secrets.RELEASE_KEYSTORE_PASSPHRASE }}" -d signing.keystore.asc > signing.keystore
          gpg --batch --passphrase "${{ secrets.RELEASE_KEYSTORE_PASSPHRASE }}" -d keystore.properties.asc > keystore.properties
          mv signing.keystore android/app/signing.keystore
          mv keystore.properties android/keystore.properties

      - name: Set up JDK 12
        uses: actions/setup-java@v1
        with:
          java-version: '12.x'
          
      - name: Install all dependencies
        run: yarn
        
      - name: Build Android application
        run: |
          cd android && ./gradlew bundleRelease
      
      - name: Publish release APK
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: android/app/build/outputs/bundle/release/app-release.aab